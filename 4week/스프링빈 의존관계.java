/* 
생성자에 @Autowired가 있으면 스프링이 연관된 객체를 스프링 컨테이너에서 찾아서 넣어준다. 
이렇게 객체 의존관계를 외부에서 넣어주는 것을 DI (Dependency Injection), 의존성 주입이라 한다.



2. 스프링 빈을 등록하는 2가지 방법

- 컴포넌트 스캔(@Service, @Repository, @Autowired)과 자동 의존관계 설정
- 자바 코드로 직접 스프링 빈 등록하기


3. 컴포넌트 스캔 원리

@Component 애노테이션이 있으면 스프링 빈으로 자동 등록된다.
@Controller 컨트롤러가 스프링 빈으로 자동 등록된 이유도 컴포넌트 스캔 때문이다.
@Component를 포함하는 다음 애노테이션도 스프링 빈으로 자동 등록된다.
    @Controller
    @Service
    @Repository


!! 생성자에 @Autowired를 사용하면 객체 생성 시점에 스프링 컨테이너에서 해당 스프링 빈을 찾아서 주입한다. 
    생성자가 1개만 있으면 @Autowired는 생략할 수 있다.



스프링은 스프링 컨테이너에 스프링 빈을 등록할 때, 기본으로 싱글톤으로 등록한다(유일하게 하나만 등록해서 공유한다.)
따라서 같은 스프링 빈이면 모두 같은 인스턴스다. 설정으로 싱글톤이 아니게 설정할 수 있지만, 특별한 경우를 제외하면 대부분 싱글톤을 사용한다.

+ DI에는 필드 주입, setter 주입, 생성자 주입 : 3가지 방법

1) 필드 주입

    @Autowired
    private MemberService memberService;


2) setter 주입
단점 setter 주입을 위해선 메서드가 public으로 열려있어야 한다. 
일반적으로 한 번 의존 관계가 주입되면 도중에 바뀔 일이 잘 없는데 public으로 메서드를 계속 열어놔야 하는 단점이 있음.

3) 생성자 주입
가장 많이 사용되는 방법으로 생성되는 시점에 DI를 하고 이후엔 다시 생성자가 호출될 일 없으니 안전하다.
*/